---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostCard from '../../components/PostCard.astro';
import Pagination from '../../components/Pagination.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('posts');
  allPosts.sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());

  const firstPagePosts = allPosts.slice(0, 15);
  const remainingPosts = allPosts.slice(15);
  const totalPages = Math.ceil(remainingPosts.length / 12);

  const paths = [{ 
    params: { page: '1' },
    props: { page: { data: firstPagePosts, currentPage: 1, lastPage: totalPages + 1 } } 
  }];

  for (let i = 2; i <= totalPages + 1; i++) {
    const pagePosts = remainingPosts.slice((i - 2) * 12, (i - 1) * 12);
    paths.push({ 
      params: { page: i.toString() },
      props: { page: { data: pagePosts, currentPage: i, lastPage: totalPages + 1 } } 
    });
  }

  return paths;
}

const { page } = Astro.props;
---

<BaseLayout>
  {page.currentPage === 1 ? (
    <>
      <div class="grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-4">
        {page.data.length > 0 && (
          <PostCard 
            post={page.data[0]} 
            isSpecialCard={true} 
          />
        )}
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4 mt-4 mb-4">
        {page.data.slice(1, 3).map((post) => (
          <PostCard 
            post={post} 
          />
        ))}
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {page.data.slice(3).map((post) => (
          <PostCard 
            post={post} 
            />
        ))}
      </div>
    </>
  ) : (

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {page.data.map(post => (
        <PostCard 
          post={post}
        />
      ))}
    </div>
  )}

  <Pagination
    currentPage={page.currentPage}
    lastPage={page.lastPage}
    urlPrev={page.currentPage > 1 ? `/page/${page.currentPage - 1}` : null}
    urlNext={page.currentPage < page.lastPage ? `/page/${page.currentPage + 1}` : null}
    basePath="/page"
  />
</BaseLayout>
